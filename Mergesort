#include <iostream>
#include <vector>
using namespace std;


void merge(vector<int>& arr, int left, int right) {
    if (left >= right) return;

    int mid = left + (right - left) / 2;

    merge(arr, left, mid);
    merge(arr, mid + 1, right);

    vector<int> leftHalf(mid - left + 1);
    vector<int> rightHalf(right - mid);

    for (int i = 0; i < leftHalf.size(); i++)
        leftHalf[i] = arr[left + i];
    for (int i = 0; i < rightHalf.size(); i++)
        rightHalf[i] = arr[mid + 1 + i];

    int i = 0, j = 0, k = left;
    while (i < leftHalf.size() && j < rightHalf.size()) {
        if (leftHalf[i] <= rightHalf[j]) {
            arr[k] = leftHalf[i];
            i++;
        } else {
            arr[k] = rightHalf[j];
            j++;
        }
        k++;
    }

    while (i < leftHalf.size()) {
        arr[k] = leftHalf[i];
        i++;
        k++;
    }

    while (j < rightHalf.size()) {
        arr[k] = rightHalf[j];
        j++;
        k++;
    }
}

void mergeSort(vector<int>& arr, int left, int right) {
    if (left < right) {
        int mid = left + (right - left) / 2;

        mergeSort(arr, left, mid);
        mergeSort(arr, mid + 1, right);

        merge(arr, left, right);
    }
}

void printArray(const vector<int>& arr) {
    for (int i = 0; i < arr.size(); i++)
        cout << arr[i] << " ";
    cout << endl;
}

int main() {
    vector<int> arr = {12, 11, 13, 5, 6, 7};
    int n = arr.size();

    cout << "Original array: ";
    printArray(arr);
    mergeSort(arr, 0, n - 1);

    cout << "Sorted array: ";
    printArray(arr);

    return 0;
}
